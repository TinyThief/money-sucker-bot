import asyncio
import nest_asyncio
from telegram import BotCommand
from telegram.ext import (
    ApplicationBuilder,
    CallbackQueryHandler,
    CommandHandler,
)

from config.telegram_config import TELEGRAM_CHAT_ID, TELEGRAM_TOKEN
from log_setup import logger
from telegram_bot.commands import (
    cmd_balance,
    cmd_equity,
    cmd_logs,
    cmd_pnl,
    cmd_positions,
    cmd_reentry,
    cmd_restart_bot,
    cmd_risk,
    cmd_scanning,
    cmd_start_strategies,
    cmd_status,
    cmd_stop_strategies,
    cmd_strategies,
    cmd_version,
)
from telegram_bot.commands_optimize import cmd_optimize_confidence
from telegram_bot.debug_commands import (
    debug_memory,
    debug_signals,
    debug_status,
    debug_threads,
    debug_weights,
)
from telegram_bot.menu_handler import handle_button
from telegram_bot.menu import build_main_menu

# –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
from telegram import Update
from telegram.ext import ContextTypes

async def start_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if update.message:
        await update.message.reply_text("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=build_main_menu())

# –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—É—Å–∫ asyncio –≤–Ω—É—Ç—Ä–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
nest_asyncio.apply()

# –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤ –±–µ–∑ —É—Ç–µ—á–µ–∫
if TELEGRAM_TOKEN:
    logger.info("‚úÖ TELEGRAM_TOKEN –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ.")
else:
    logger.error("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_TOKEN –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")

if TELEGRAM_CHAT_ID:
    logger.info("‚úÖ TELEGRAM_CHAT_ID –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ.")
else:
    logger.error("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_CHAT_ID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞
async def run_telegram_async() -> None:
    try:
        if TELEGRAM_TOKEN is None:
            raise ValueError("TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

        app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

        await app.bot.set_my_commands([
            BotCommand("start", "üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
            BotCommand("start_strategies", "‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"),
            BotCommand("stop_strategies", "‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"),
            BotCommand("status", "üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"),
            BotCommand("strategies", "üìò –ê–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"),
            BotCommand("scanning", "üîç –ö—Ç–æ —Å–µ–π—á–∞—Å –∏—â–µ—Ç –≤—Ö–æ–¥"),
            BotCommand("balance", "üí∞ –ë–∞–ª–∞–Ω—Å"),
            BotCommand("positions", "üìâ –ü–æ–∑–∏—Ü–∏–∏"),
            BotCommand("pnl", "üíπ –¢–µ–∫—É—â–∏–π PnL"),
            BotCommand("logs", "ü™µ –õ–æ–≥–∏"),
            BotCommand("restart_bot", "‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
            BotCommand("risk", "üõ° –†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç"),
            BotCommand("reentry", "üîÅ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥"),
            BotCommand("version", "üì¶ –í–µ—Ä—Å–∏—è"),
            BotCommand("equity", "üìà Equity Curve"),
            BotCommand("optimize_confidence", "üß† –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è confident –≤–µ—Å–æ–≤"),
            BotCommand("debug_status", "üß† Debug: —Å—Ç–∞—Ç—É—Å"),
            BotCommand("debug_threads", "üìö Debug: –ø–æ—Ç–æ–∫–∏"),
            BotCommand("debug_memory", "üìÄ Debug: –ø–∞–º—è—Ç—å"),
            BotCommand("debug_weights", "üìä Debug: –≤–µ—Å–∞"),
            BotCommand("debug_signals", "ü©µ Debug: —Å–∏–≥–Ω–∞–ª—ã"),
        ])

        # ‚úÖ –•–µ–Ω–¥–ª–µ—Ä—ã –∫–æ–º–∞–Ω–¥
        app.add_handler(CommandHandler("start", start_menu))
        app.add_handler(CommandHandler("menu", start_menu))
        app.add_handler(CommandHandler("start_strategies", cmd_start_strategies))
        app.add_handler(CommandHandler("stop_strategies", cmd_stop_strategies))
        app.add_handler(CommandHandler("status", cmd_status))
        app.add_handler(CommandHandler("strategies", cmd_strategies))
        app.add_handler(CommandHandler("scanning", cmd_scanning))
        app.add_handler(CommandHandler("balance", cmd_balance))
        app.add_handler(CommandHandler("positions", cmd_positions))
        app.add_handler(CommandHandler("pnl", cmd_pnl))
        app.add_handler(CommandHandler("logs", cmd_logs))
        app.add_handler(CommandHandler("restart_bot", cmd_restart_bot))
        app.add_handler(CommandHandler("risk", cmd_risk))
        app.add_handler(CommandHandler("reentry", cmd_reentry))
        app.add_handler(CommandHandler("version", cmd_version))
        app.add_handler(CommandHandler("equity", cmd_equity))
        app.add_handler(CommandHandler("optimize_confidence", cmd_optimize_confidence))

        # üêû –•–µ–Ω–¥–ª–µ—Ä—ã –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        app.add_handler(CommandHandler("debug_status", debug_status))
        app.add_handler(CommandHandler("debug_threads", debug_threads))
        app.add_handler(CommandHandler("debug_memory", debug_memory))
        app.add_handler(CommandHandler("debug_weights", debug_weights))
        app.add_handler(CommandHandler("debug_signals", debug_signals))

        # ‚å®Ô∏è –ö–Ω–æ–ø–∫–∏ InlineMenu
        app.add_handler(CallbackQueryHandler(handle_button))

        logger.info("ü§ñ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")

        if TELEGRAM_CHAT_ID:
            await app.bot.send_message(
                chat_id=TELEGRAM_CHAT_ID,
                text="ü§ñ Money Sucker Bot –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.",
            )

        await ApplicationBuilder().token(TELEGRAM_TOKEN).build().run_polling()

    except Exception:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Telegram-–±–æ—Ç–∞:")
        raise

# –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫
def run_telegram_bot() -> None:
    try:
        loop = asyncio.get_event_loop()
        if loop.is_running():
            loop.create_task(run_telegram_async())
        else:
            loop.run_until_complete(run_telegram_async())
    except Exception:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram-–±–æ—Ç–∞:")
        raise