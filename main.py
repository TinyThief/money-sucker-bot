import json
import traceback

from log_setup import logger  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –ª–æ–≥–≥–µ—Ä —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
from strategies.smc_strategy import run_smc_strategy


# üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ config/pairs.json
def load_symbols():
    try:
        with open("config/pairs.json", encoding="utf-8") as f:
            data = json.load(f)
            return data.get("pairs", [])
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ pairs.json: {e}")
        return []

symbols = load_symbols()

CAPITAL = 1000
RISK_PCT = 0.01

logger.info("üü¢ –ó–∞–ø—É—Å–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ SMC –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–∞—Ä...")

for symbol in symbols:
    try:
        logger.info(f"\nüü° –°—Ç–∞—Ä—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ {symbol}")
        run_smc_strategy(symbol=symbol, capital=CAPITAL, risk_pct=RISK_PCT)
        logger.info(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ {symbol}")
    except Exception as e:
        logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è {symbol}: {e!s}")
        traceback.print_exc()

logger.info("üü£ –í—Å–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã.")
